@model Creator
@{
    ViewData["Title"] = "Capture Image";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let timerInterval;
        Swal.fire({
        title: "Auto close alert!",
        html: "PLease take a few minutes to capture a image before completing registration.",
        timer: 4000,
        timerProgressBar: true,
        didOpen: () => {
        Swal.showLoading();
        const timer = Swal.getPopup().querySelector("b");
        timerInterval = setInterval(() => {
        timer.textContent = "${Swal.getTimerLeft()}";
        }, 100);
        },
        willClose: () => {
        clearInterval(timerInterval);
        }
        }).then((result) => {
        
        if (result.dismiss === Swal.DismissReason.timer) {
        console.log("I was closed by the timer");
        }
        });
    </script>

<div class="container">
    <div class="row">

    <h2>@ViewData["Title"]</h2>
    <div class="col s12 m6 left">
   
    <video id="video" width="400" height="300" autoplay></video>
    <br>

   
    <button id="captureBtn" class="btn pulse waves-effect waves-green">Capture Image</button>
            <div asp-validation-summary="All" class="text-danger"></div>
    </div>
    <div class="col s12 m6 right ">

   
    <canvas id="canvas" width="400" height="300" style="display:none;"></canvas>

   
    <form asp-action="CaptureImage" method="post" enctype="multipart/form-data">
         <input type="hidden" id="imageData" asp-for="PredictionImage" name="PedictionImage" />

        <button type="submit" class="btn pulse waves-effect waves-green">Predict age</button>
    </form>
        </div>
        
</div>
</div>
<script>
   
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureBtn = document.getElementById('captureBtn');
    const imageData = document.getElementById('imageData');
    const context = canvas.getContext('2d');

    
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(stream) {
            video.srcObject = stream;
        })
        .catch(function(err) {
            console.log("Error accessing camera: " + err);
        });

    
    captureBtn.addEventListener('click', function() {
       
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageUrl = canvas.toDataURL('image/png');
        
        
        imageData.value = imageUrl;
        canvas.style.display = 'block';
    });
</script>
